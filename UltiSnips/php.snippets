snippet php
	<?php
	${1}
	?>
endsnippet
snippet ec
	echo "${1:string}"${2};
endsnippet
snippet inc
	include '${1:file}';${2}
endsnippet
snippet inc1
	include_once '${1:file}';${2}
endsnippet
snippet req
	require '${1:file}';${2}
endsnippet
snippet req1
	require_once '${1:file}';${2}
# $GLOBALS['...']
endsnippet
snippet globals
	$GLOBALS['${1:variable}']${2: = }${3:something}${4:;}${5}
endsnippet
#snippet $_ COOKIE['...']
#	$_COOKIE['${1:variable}']${2}
#endsnippet
#snippet $_ ENV['...']
#	$_ENV['${1:variable}']${2}
#endsnippet
#snippet $_ FILES['...']
#	$_FILES['${1:variable}']${2}
#endsnippet
#snippet $_ Get['...']
#	$_GET['${1:variable}']${2}
#endsnippet
#snippet $_ POST['...']
#	$_POST['${1:variable}']${2}
#endsnippet
#snippet $_ REQUEST['...']
#	$_REQUEST['${1:variable}']${2}
#endsnippet
#snippet $_ SERVER['...']
#	$_SERVER['${1:variable}']${2}
#endsnippet
#snippet $_ SESSION['...']
#	$_SESSION['${1:variable}']${2}
## Start Docblock
#endsnippet
snippet /*
	/**
	 * ${1}
	 **/
# Class - post doc
endsnippet
snippet doc_cp
	/**
	 * ${1:undocumented class}
	 *
	 * @package ${2:default}
	 * @author ${3:`g:snips_author`}
	**/${4}
# Class Variable - post doc
endsnippet
snippet doc_vp
	/**
	 * ${1:undocumented class variable}
	 *
	 * @var ${2:string}
	 **/${3}
# Class Variable
endsnippet
snippet doc_v
	/**
	 * ${3:undocumented class variable}
	 *
	 * @var ${4:string}
	 **/
	${1:var} $${2};${5}
# Class
endsnippet
snippet doc_c
	/**
	 * ${3:undocumented class}
	 *
	 * @packaged ${4:default}
	 * @author ${5:`g:snips_author`}
	 **/
	${1:}class ${2:}
	{${6}
	} // END $1class $2
# Constant Definition - post doc
endsnippet
snippet doc_dp
	/**
	 * ${1:undocumented constant}
	 **/${2}
# Constant Definition
endsnippet
snippet doc_d
	/**
	 * ${3:undocumented constant}
	 **/
	define(${1}, ${2});${4}
# Function - post doc
endsnippet
snippet doc_fp
	/**
	 * ${1:undocumented function}
	 *
	 * @return ${2:void}
	 * @author ${3:`g:snips_author`}
	 **/${4}
# Function signature
endsnippet
snippet doc_s
	/**
	 * ${4:undocumented function}
	 *
	 * @return ${5:void}
	 * @author ${6:`g:snips_author`}
	 **/
	${1}function ${2}(${3});${7}
# Function
endsnippet
snippet doc_f
	/**
	 * ${4:undocumented function}
	 *
	 * @return ${5:void}
	 * @author ${6:`g:snips_author`}
	 **/
	${1}function ${2}(${3})
	{${7}
	}
# Header
endsnippet
snippet doc_h
	/**
	 * ${1}
	 *
	 * @author ${2:`g:snips_author`}
	 * @version ${3:$Id$}
	 * @copyright ${4:$2}, `strftime('%d %B, %Y')`
	 * @package ${5:default}
	 **/
	
	/**
	 * Define DocBlock
	 *//
# Interface
endsnippet
snippet doc_i
	/**
	 * ${2:undocumented class}
	 *
	 * @package ${3:default}
	 * @author ${4:`g:snips_author`}
	 **/
	interface ${1:}
	{${5}
	} // END interface $1
# class ...
endsnippet
snippet class
	/**
	 * ${1}
	 **/
	class ${2:ClassName}
	{
		${3}
		function ${4:__construct}(${5:argument})
		{
			${6:// code...}
		}
	}
# define(...)
endsnippet
snippet def
	define('${1}'${2});${3}
# defined(...)
endsnippet
snippet def?
	${1}defined('${2}')${3}
endsnippet
snippet wh
	while (${1:/* condition */}) {
		${2:// code...}
	}
# do ... while
endsnippet
snippet do
	do {
		${2:// code... }
	} while (${1:/* condition */});
endsnippet
snippet if
	if (${1:/* condition */}) {
		${2:// code...}
	}
endsnippet
snippet ife
	if (${1:/* condition */}) {
		${2:// code...}
	} else {
		${3:// code...}
	}
	${4}
endsnippet
snippet else
	else {
		${1:// code...}
	}
endsnippet
snippet elseif
	elseif (${1:/* condition */}) {
		${2:// code...}
	}
# Tertiary conditional
endsnippet
snippet t
	$${1:retVal} = (${2:condition}) ? ${3:a} : ${4:b};${5}
endsnippet
snippet switch
	switch ($${1:variable}) {
		case '${2:value}':
			${3:// code...}
			break;
		${5}
		default:
			${4:// code...}
			break;
	}
endsnippet
snippet case
	case '${1:value}':
		${2:// code...}
		break;${3}
endsnippet
snippet for
	for ($${2:i} = 0; $$2 < ${1:count}; $$2${3:++}) {
		${4: // code...}
	}
endsnippet
snippet foreach
	foreach ($${1:variable} as $${2:key}) {
		${3:// code...}
	}
endsnippet
snippet fun
	${1:public }function ${2:FunctionName}(${3})
	{
		${4:// code...}
	}
endsnippet
# $... = array (...)
snippet array
	$${1:arrayName} = array('${2}' => ${3});${4}
endsnippet
